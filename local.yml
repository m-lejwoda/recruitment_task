services:
  satagro_django:
    container_name: satagro_django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    depends_on:
      satagro_postgis:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - backend


  satagro_postgis:
    container_name: satagro_postgis
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgis_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    volumes:
    - postgis_data:/var/lib/postgresql/data


  satagro_celery:
    container_name: satagro_celery
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: celery -A recruitment_task worker -l info
    depends_on:
      satagro_postgis:
        condition: service_healthy
      satagro_redis:
        condition: service_started
    networks:
      - backend


  satagro_beat:
    container_name: satagro_beat
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    command: celery -A recruitment_task beat -l info
    depends_on:
      satagro_postgis:
        condition: service_healthy
      satagro_redis:
        condition: service_started
    networks:
      - backend

  satagro_redis:
    container_name: satagro_redis
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  backend:

volumes:
  postgis_data: